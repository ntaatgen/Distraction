/// Model of the find-the-differences task with visual distraction
///

define task find-differences-easy {
	initial-goals: (find-differences)
	goals: (attend-moving)
	start-screen: start
	lf: 0.5
	ans: 0.3
	ol: nil
	imaginal-autoclear: nil
	alpha: 0.1
	production-prim-latency: 0.2
	default-activation: 1.0
	input-activation: 0.65
	default-operator-assoc: 8.0

}

/// This implements the task
define goal find-differences {
	operator focus-screen {
	  V1 = mainscreen
	==>
	  attenddownrandom -> AC1
	}

	operator next-random {
	  V1 = pair
	  V2 <> error
	==>
	  focusdown -> AC1
	}

	operator remember-first {
	  V1 = letter
	  V2 <> error
	  WM1 = nil
	==>
	  V2 -> WM1
	  focusnext -> AC1
	}

	operator compare-second {
	V1 = letter
	V2 = WM1
	==>
	nil -> WM1
	attenduprandom -> AC1
	}

	operator compare-second-match {
	V1 = letter
	V2 <> error
	V2 <> WM1
	==>
	say -> AC1
	V2 -> AC2
	WM1 -> AC3
	stop -> G1
	}

	operator ignore-movie {
	V1 = attend-moving
	==>
	attendrandom -> AC1
	}

	operator continue {
	V1 = nil
	==>
	attendrandom -> AC1
	}
}

// These operators implement looking at the visual distraction
// Given that subjects only look very briefly at the distraction,
// the model immediately looks back after looking at the movie

define goal attend-moving {
	operator look-at-movie {
	V1 = attend-moving
	V2 = nil
	==>
	attend-movie -> AC1
	attending -> V2
	}

	operator look-back {
	V1 = attend-moving
	V2 = attending
	==>
	nil -> V1
	}
}

define goal-action {
(say x c)
}

// Say includes time to move to next trial
define action say {
  latency: 2.0
  noise: 0.1
  distribution: uniform
  output: Saying
}


define screen start {
  (mainscreen
    (pair one (letter a) (letter a))
    (pair two (letter b) (letter b))
    (pair three (letter c) (letter x))
    (pair four (letter d) (letter d))
    (pair five (letter e) (letter e))
    (attend-moving)
    (attend-moving)
)
}

